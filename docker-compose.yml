name: backend_server

services:
  core_db:
    image: postgres:16
    container_name: core_db
    env_file:
      - ./core_system/.env
    volumes:
      - core_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U \"$$POSTGRES_USER\" || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [ app_net ]
    restart: unless-stopped

  core_web:
    build:
      context: ./core_system
      dockerfile: Dockerfile
    container_name: core_web
    env_file:
      - ./core_system/.env
    command: ["/app/entrypoint.sh"]
    volumes:
      - ./core_system:/app:cached
    ports:
      - "8000:8000"
    depends_on:
      core_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20
    networks: [ app_net ]
    restart: unless-stopped

  hr_db:
    image: postgres:16
    container_name: hr_db
    env_file:
      - ./hr_system/.env
    volumes:
      - hr_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U \"$$POSTGRES_USER\" || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    profiles: [ "hr" ]
    networks: [ app_net ]
    restart: unless-stopped

  hr_web:
    build:
      context: ./hr_system
      dockerfile: Dockerfile
    container_name: hr_web
    env_file:
      - ./hr_system/.env
    command: ["/app/entrypoint.sh"]
    volumes:
      - ./hr_system:/app:cached
    ports:
      - "8001:8001"
    depends_on:
      hr_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8001/health/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20
    profiles: [ "hr" ]
    networks: [ app_net ]
    restart: unless-stopped

networks:
  app_net:
    name: backend_net
    driver: bridge

volumes:
  core_pgdata:
  hr_pgdata:
